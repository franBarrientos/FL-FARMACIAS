<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jc5l3g3/BXGt1YTY8w7+AAAAAElFTkSuQmCC
</value>
  </data>
</root>